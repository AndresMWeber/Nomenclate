[tool.poetry]
authors = ["Andres Weber <andresmweber@gmail.com>"]
description = "A tool set for automating and generating strings based on arbitrary user-defined naming conventions."
name = "nomenclate"
version = "2.6.4"

documentation = "https://nomenclate.readthedocs.io/en/latest/"
homepage = "https://nomenclate.andresmweber.com"
license = "MIT"
readme = "README.rst"
repository = "https://github.com/AndresMWeber/Nomenclate"

classifiers = [
  'License :: OSI Approved :: MIT License',
  'Development Status :: 4 - Beta',
  'Natural Language :: English',
  'Operating System :: MacOS :: MacOS X',
  'Operating System :: Microsoft :: Windows',
  'Operating System :: POSIX :: Linux',
  'Operating System :: Unix',
  'Programming Language :: Python :: 3.6',
  'Programming Language :: Python :: 3.7',
  'Programming Language :: Python :: 3.8',
  'Topic :: Documentation :: Sphinx',
  'Topic :: Multimedia :: Graphics :: 3D Modeling',
]
keywords = ["naming", "conventions", "labels", "config", "convention", "name", "parsing", "parse"]

[tool.poetry.dependencies]
PyYAML = "^5.4.1"
Sphinx = {version = "^4.0.2", optional = true, extras = ["autodoc"]}
python = "^3.6 || 3.7 ||3.8"
python-dateutil = "^2.8.1"
toml = "^0.10.2"

[tool.poetry.dev-dependencies]
black = {version = "^18.3-alpha.0", python = "^3.6"}
coverage = "^5.5"
coveralls = "^3.1.0"
docopt = "^0.6.2"
fixtures = "^3.0.0"
mock = "^4.0.3"
nose2 = "^0.10.0"
poethepoet = "^0.10.0"
pyfakefs = "^4.4.0"
tox = "^3.23.1"
twine = "^3.4.1"
unittest2 = "^1.1.0"

[tool.poetry.extras]
autodoc = ['Sphinx', 'sphinx-autodoc', 'sphinx-build', 'sphinx-rtd-theme']

[tool.poe.tasks]
docreqs = "poetry export -f requirements.txt --output docs/requirements.txt"
test = "coverage run -m nose2 -c tests/.nose2rc"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.black]
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''
include = '\.pyi?$'
line-length = 100
target_version = ['py36']

[tool.coverage.run]
branch = true
source = ["nomenclate"]

[tool.coverage.report]
exclude_lines = [
  "if self.debug:",
  "pragma: no cover",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
]
ignore_errors = true
omit = [
  "tests/*",
  "**/*/__init__.py",
  "**/*/__main__.py",
  "nomenclate/app.py",
  "nomenclate/nlog.py",
  "nomenclate/settings.py",
  "nomenclate/version.py",
  "nomenclate/ui/*",
  "nomenclate/core/errors.py",
  "nomenclate/core/nameparser.py",
]
